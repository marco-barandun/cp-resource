domain = substring(p$source, 1, 1)
)
(m <- leaflet(p, width = '100%') %>%
addMapPane(name = "polygons", zIndex = 410) %>%
addMapPane(name = "maplabels", zIndex = 420) %>%
addProviderTiles("CartoDB.PositronNoLabels") %>%
addProviderTiles("CartoDB.PositronOnlyLabels",
options = leafletOptions(pane = "maplabels"),
group = "map labels") %>%
addPolygons(
#data = p,
#group = "label1",
popup = ~popup,
label = ~label,
fillOpacity = 0.5,
color = ~pal(substring(source, 1, 1)),
stroke = TRUE,
weight = 1,
opacity = .5,
highlightOptions = highlightOptions(
color = "#ff4a4a",
weight = 5,
bringToFront = TRUE
)) %>%
addScaleBar(position = "bottomleft") #%>%
#htmlwidgets::onRender(jsCode, data=p)
)
print(paste("Mapped:", species, if(!is.na(subspecies)) {subspecies}))
if (export == TRUE) {
if (is.na(subspecies)) {saveWidget(m, file=paste("./maps/", gsub(" ", "_", species), ".html", sep = ""))}
if (!is.na(subspecies)) {saveWidget(m, file=paste("./maps/", gsub(" ", "_", species), "_", subspecies, ".html", sep = ""))}
}
}
return(m)
}
map_sarracenia(species_list = "Sarracenia alata",
#subspecies = "rubra",
df = sarracenia_df,
l2_global = l2,
export = TRUE)
map_sarracenia(species_list = "Sarracenia alata",
#subspecies = "rubra",
df = sarracenia_df,
l2_global = l2,
export = TRUE)
map_sarracenia <- function(species_list,
subspecies = NA,
df,
l2_global,
export = FALSE) {
#browser()
for (species in species_list) {
jsCode <- paste0('
function(el, x, data) {
var marker = document.getElementsByClassName("leaflet-interactive");
for(var i=0; i < marker.length; i++){
(function(){
var v = data.win_url[i];
marker[i].addEventListener("click", function() { window.open(v);}, false);
}());
}
}
')
#paste0("<img src = https://upload.wikimedia.org/wikipedia/commons/thumb/c/c1/Rlogo.png/274px-Rlogo.png >",
#       paste("\n", '<a href="http://www.google.com">', paste("Wakulla", "Florida", sep = ", "), '</a>"', sep = ""), sep = "")
#
#mutate(label = paste0("<img src = https://upload.wikimedia.org/wikipedia/commons/thumb/c/c1/Rlogo.png/274px-Rlogo.png >",
#                      paste("\n", paste(.$NAME_2, .$NAME_1, sep = ", "), sep = ""), sep = ""))
p <- l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., df %>% filter(scientificName == UQ(species)) %>%
arrange(source) %>%
distinct(country, state, county, .keep_all = TRUE) %>%
filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE, all.y = FALSE) %>%
mutate(popup = paste0("<img src =", .$img_url,  " height='100%' width='100%' >",
paste("\n", '<a target="_parent" href=', .$link, '>', paste(.$NAME_2, .$NAME_1, sep = ", "), ' </a>', sep = ""), sep = ""), sep = "") %>%
mutate(win_url = link) %>%
filter(scientificName == UQ(species)) %>%
mutate(popup = ifelse(source == "1_mine", popup, paste(.$NAME_2, .$NAME_1, sep = ", "))) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", "))
#if(is.na(subspecies)) {p <- p[unique()]}
if(!is.na(subspecies)) {p <- p[p$subspecies == subspecies,]}
pal <- colorFactor(
palette = c('darkgreen', 'orange', 'grey30'),
domain = substring(p$source, 1, 1)
)
(m <- leaflet(p, width = '100%') %>%
addMapPane(name = "polygons", zIndex = 410) %>%
addMapPane(name = "maplabels", zIndex = 420) %>%
addProviderTiles("CartoDB.PositronNoLabels") %>%
addProviderTiles("CartoDB.PositronOnlyLabels",
options = leafletOptions(pane = "maplabels"),
group = "map labels") %>%
addPolygons(
#data = p,
#group = "label1",
popup = ~popup,
label = ~label,
fillOpacity = 0.5,
color = ~pal(substring(source, 1, 1)),
stroke = TRUE,
weight = 1,
opacity = .5,
highlightOptions = highlightOptions(
color = "#ff4a4a",
weight = 5,
bringToFront = TRUE
)) %>%
addScaleBar(position = "bottomleft") #%>%
#htmlwidgets::onRender(jsCode, data=p)
)
print(paste("Mapped:", species, if(!is.na(subspecies)) {subspecies}))
if (export == TRUE) {
if (is.na(subspecies)) {saveWidget(m, file=paste("./maps/", gsub(" ", "_", species), ".html", sep = ""))}
if (!is.na(subspecies)) {saveWidget(m, file=paste("./maps/", gsub(" ", "_", species), "_", subspecies, ".html", sep = ""))}
}
}
return(m)
}
map_sarracenia(species_list = "Sarracenia alata",
#subspecies = "rubra",
df = sarracenia_df,
l2_global = l2,
export = TRUE)
unique(sarracenia_df$scientificName)
map_sarracenia(species_list = unique(sarracenia_df$scientificName),
#subspecies = "rubra",
df = sarracenia_df,
l2_global = l2,
export = TRUE)
View(sarracenia_df)
# Importing the Sarracenia I already have
my_plants <- rbind(read_csv("./plant_lists/Sarracenia_list.csv") %>% filter(!is.na(county))) %>% distinct(genus, species, subspecies, county, state, country, .keep_all = TRUE) %>%
mutate(source = "1_mine")
# Merging the datasets
sarracenia_df <- my_plants %>%
bind_rows(., to_acquire) %>%
bind_rows(., sarracenia) %>%
mutate(species = gsub("leucopyhlla", "leucophylla", species)) %>%
filter(species != "x moorei") %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
dplyr::select(genus, species, subspecies, country, state, county, source, everything()) %>%
distinct(genus, species, subspecies, country, state, county, .keep_all = TRUE) %>%
mutate(scientificName = paste(genus, species)) %>%
filter(!is.na(county)) %>%
mutate(link = paste("https://marco-barandun.github.io/cp-resource/sarracenia/assets/profiles/Sarracenia", species, subspecies, country, state, county, sep = "_") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .)) %>%
mutate(img_url = paste0(paste("https://marco-barandun.github.io/cp-resource/sarracenia/assets/maps/img/Sarracenia", species, subspecies, country, state, county, sep = "_"), ".png") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .))
map_sarracenia(species_list = "Sarracenia_oreophila",
#subspecies = "rubra",
df = sarracenia_df,
l2_global = l2,
export = TRUE)
map_sarracenia(species_list = "Sarracenia oreophila",
#subspecies = "rubra",
df = sarracenia_df,
l2_global = l2,
export = TRUE)
all_my_plants <- read_csv("./plant_lists/Sarracenia_list.csv")
my_plants <- all_my_plants %>% filter(!is.na(county)) %>% distinct(genus, species, subspecies, county, state, country, .keep_all = TRUE) %>%
mutate(source = "1_mine")
sarracenia_all_df <- my_plants %>%
bind_rows(., to_acquire) %>%
bind_rows(., sarracenia) %>%
mutate(species = gsub("leucopyhlla", "leucophylla", species)) %>%
filter(species != "x moorei") %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
dplyr::select(genus, species, subspecies, country, state, county, source, everything()) %>%
mutate(scientificName = paste(genus, species)) %>%
mutate(link = paste("https://marco-barandun.github.io/cp-resource/sarracenia/assets/profiles/Sarracenia", species, subspecies, country, state, county, sep = "_") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .)) %>%
mutate(img_url = paste0(paste("https://marco-barandun.github.io/cp-resource/sarracenia/assets/maps/img/Sarracenia", species, subspecies, country, state, county, sep = "_"), ".png") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .))
sarracenia_df <- sarracenia_all_df %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
distinct(genus, species, subspecies, country, state, county, .keep_all = TRUE) %>%
filter(!is.na(county)) %>%
?datatable
?DT::datatable
sarracenia_df <- sarracenia_all_df %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
distinct(genus, species, subspecies, country, state, county, .keep_all = TRUE) %>%
filter(!is.na(county)) %>%
t <- DT::datatable(sarracenia_all_df %>% select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)))))
sarracenia_df <- sarracenia_all_df %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
distinct(genus, species, subspecies, country, state, county, .keep_all = TRUE) %>%
filter(!is.na(county)) %>%
t <- DT::datatable(sarracenia_all_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)))))
# Merging the datasets
sarracenia_all_df <- my_plants %>%
bind_rows(., to_acquire) %>%
bind_rows(., sarracenia) %>%
mutate(species = gsub("leucopyhlla", "leucophylla", species)) %>%
filter(species != "x moorei") %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
dplyr::select(genus, species, subspecies, country, state, county, source, everything()) %>%
mutate(scientificName = paste(genus, species)) %>%
mutate(link = paste("https://marco-barandun.github.io/cp-resource/sarracenia/assets/profiles/Sarracenia", species, subspecies, country, state, county, sep = "_") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .)) %>%
mutate(img_url = paste0(paste("https://marco-barandun.github.io/cp-resource/sarracenia/assets/maps/img/Sarracenia", species, subspecies, country, state, county, sep = "_"), ".png") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .))
sarracenia_df <- sarracenia_all_df %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
distinct(genus, species, subspecies, country, state, county, .keep_all = TRUE) %>%
filter(!is.na(county))
t <- DT::datatable(sarracenia_all_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)))))
t
t <- DT::datatable(sarracenia_all_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)))))
t
t <- DT::datatable(sarracenia_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)))))
t
t <- DT::datatable(sarracenia_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)),
list(height = '4px'))))
ncol(sarracenia_df)
t <- DT::datatable(sarracenia_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)),
list(height = '4px', targets = c(0:ncol(sarracenia_df))))))
t
t <- DT::datatable(sarracenia_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)),
list(height = '4px', targets = c(1:ncol(sarracenia_df))))))
t
t <- DT::datatable(sarracenia_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)),
list(height = '4px', targets = c(1:12)))))
t
t <- DT::datatable(sarracenia_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)),
list(height = '4px', targets = c(1:11)))))
t
t <- DT::datatable(sarracenia_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4))))) %>%
DT::formatStyle(names(.), lineHeight='5px')
t <- DT::datatable(sarracenia_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4))))) %>%
DT::formatStyle(., lineHeight='5px')
?formatStyle
t <- DT::datatable(sarracenia_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4))))) %>%
DT::formatStyle(table = ., lineHeight='5px')
t <- DT::datatable(sarracenia_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4))))) %>%
DT::formatStyle(columns = c(1:12), lineHeight='5px')
t
t <- DT::datatable(sarracenia_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)))))
t
t <- DT::datatable(sarracenia_all_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)))))
t
View(sarracenia_all_df)
# Importing the Sarracenia I already have
my_plants <- read_csv("./plant_lists/Sarracenia_list.csv") %>% mutate(source = "1_mine")
# Merging the datasets
sarracenia_all_df <- my_plants %>%
bind_rows(., to_acquire) %>%
bind_rows(., sarracenia) %>%
mutate(species = gsub("leucopyhlla", "leucophylla", species)) %>%
filter(species != "x moorei") %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
dplyr::select(genus, species, subspecies, country, state, county, source, everything()) %>%
mutate(scientificName = paste(genus, species)) %>%
mutate(link = paste("https://marco-barandun.github.io/cp-resource/sarracenia/assets/profiles/Sarracenia", species, subspecies, country, state, county, sep = "_") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .)) %>%
mutate(img_url = paste0(paste("https://marco-barandun.github.io/cp-resource/sarracenia/assets/maps/img/Sarracenia", species, subspecies, country, state, county, sep = "_"), ".png") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .))
t <- DT::datatable(sarracenia_all_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)))))
t
sarracenia_df <- sarracenia_all_df %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
distinct(genus, species, subspecies, country, state, county, .keep_all = TRUE) %>%
filter(!is.na(county))
t <- DT::datatable(sarracenia_all_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)))))
t
t <- DT::datatable(sarracenia_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)))))
t
View(sarracenia_all_df)
View(sarracenia_all_df)
t <- DT::datatable(sarracenia_all_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)))))
htmlwidgets::saveWidget(t,
file="species.html", knitrOptions = list(width = 700, height = 600))
t
t <- DT::datatable(sarracenia_all_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)))))
t
t <- DT::datatable(sarracenia_all_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '10px', targets = c(0, 1, 2, 3, 4)))))
t
t <- DT::datatable(sarracenia_all_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '15px', targets = c(0))),
columnDefs = list(list(width = '10px', targets = c(1, 2, 3, 4)))))
t
t <- DT::datatable(sarracenia_all_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '100px', targets = c(0))),
columnDefs = list(list(width = '10px', targets = c(1, 2, 3, 4)))))
t
t <- DT::datatable(sarracenia_all_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '15px', targets = c(0))),
columnDefs = list(list(width = '10px', targets = c(1, 2, 3, 4)))))
t
# Importing the Sarracenia I already have
my_plants <- read_csv("./plant_lists/Sarracenia_list.csv") %>% mutate(source = "1_mine")
sarracenia_all_df <- my_plants %>%
bind_rows(., to_acquire) %>%
bind_rows(., sarracenia) %>%
mutate(species = gsub("leucopyhlla", "leucophylla", species)) %>%
filter(species != "x moorei") %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
dplyr::select(genus, species, subspecies, country, state, county, source, everything()) %>%
mutate(scientificName = paste(genus, species)) %>%
mutate(link = paste("https://marco-barandun.github.io/cp-resource/sarracenia/assets/profiles/Sarracenia", species, subspecies, country, state, county, sep = "_") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .)) %>%
mutate(img_url = paste0(paste("https://marco-barandun.github.io/cp-resource/sarracenia/assets/maps/img/Sarracenia", species, subspecies, country, state, county, sep = "_"), ".png") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .))
sarracenia_df <- sarracenia_all_df %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
distinct(genus, species, subspecies, country, state, county, .keep_all = TRUE) %>%
filter(!is.na(county))
t <- DT::datatable(sarracenia_all_df %>% dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>% filter(source != "3_distribution"),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '15px', targets = c(0))),
columnDefs = list(list(width = '10px', targets = c(1, 2, 3, 4)))))
t
sarracenia_all_df %>%
dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>%
filter(source != "3_distribution") %>%
iconv(., "UTF-8", "UTF-8",sub='')
p <- sarracenia_all_df %>%
dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>%
filter(source != "3_distribution") %>%
iconv(., "UTF-8", "UTF-8",sub='')
p <- sarracenia_all_df %>%
dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>%
filter(source != "3_distribution") %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", ub='')
p <- sarracenia_all_df %>%
p <- sarracenia_all_df %>%
dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>%
filter(source != "3_distribution") %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", sub=''))
View(p)
t <- DT::datatable(sarracenia_all_df %>%
dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>%
filter(source != "3_distribution") %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", sub='')),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '15px', targets = c(0))),
columnDefs = list(list(width = '10px', targets = c(1, 2, 3, 4)))))
t
t <- DT::datatable(sarracenia_all_df %>%
dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>%
filter(source != "3_distribution") %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", sub='')),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '15px', targets = c(0))),
columnDefs = list(list(width = '10px', targets = c(1, 2, 3, 4)))),
columnDefs = list(list(
targets = "_all",
render = JS(
"function(data, type, row, meta) {",
"return type === 'display' && data != null && data.length > 30 ?",
"'<span title=\"' + data + '\">' + data.substr(0, 30) + '...</span>' : data;",
"}"
)
)))
?DT::datatable
t <- DT::datatable(sarracenia_all_df %>%
dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>%
filter(source != "3_distribution") %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", sub='')),
rownames = FALSE,
height = "10px",
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '15px', targets = c(0))),
columnDefs = list(list(width = '10px', targets = c(1, 2, 3, 4)))),
)
t
t <- DT::datatable(sarracenia_all_df %>%
dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>%
filter(source != "3_distribution") %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", sub='')),
rownames = FALSE,
height = "100px",
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '15px', targets = c(0))),
columnDefs = list(list(width = '10px', targets = c(1, 2, 3, 4)))),
)
t
t <- DT::datatable(sarracenia_all_df %>%
dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>%
filter(source != "3_distribution") %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", sub='')),
rownames = FALSE,
height = "1000px",
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '15px', targets = c(0))),
columnDefs = list(list(width = '10px', targets = c(1, 2, 3, 4)))),
)
t
t <- DT::datatable(sarracenia_all_df %>%
dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>%
filter(source != "3_distribution") %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", sub='')),
rownames = FALSE,
height = "300px",
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '15px', targets = c(0))),
columnDefs = list(list(width = '10px', targets = c(1, 2, 3, 4)))),
)
t
htmlwidgets::saveWidget(t,
file="species.html", knitrOptions = list(width = 700, height = 600))
t <- DT::datatable(sarracenia_all_df %>%
dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>%
filter(source != "3_distribution") %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", sub='')),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '15px', targets = c(0))),
columnDefs = list(list(width = '10px', targets = c(1, 2, 3, 4)))),
)
htmlwidgets::saveWidget(t,
file="species.html", knitrOptions = list(width = 700, height = 600))
getwd()
t <- DT::datatable(sarracenia_all_df %>%
dplyr::select(code, scientificName, subspecies, county, state, country, source, year, old_code, pot1_code, pot2_code, comment) %>%
filter(source != "3_distribution") %>%
mutate(comment = iconv(.$comment, "UTF-8", "UTF-8", sub='')),
rownames = FALSE,
options = list(autoWidth = TRUE,
columnDefs = list(list(width = '15px', targets = c(0))),
columnDefs = list(list(width = '10px', targets = c(1, 2, 3, 4)))),
)
htmlwidgets::saveWidget(t,
file="species.html", knitrOptions = list(width = 700, height = 600))
htmlwidgets::saveWidget(t,
file="speciess.html", knitrOptions = list(width = 700, height = 600))
