filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_")))
l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., sarracenia_df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE)
species
l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., sarracenia_df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link)
l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., sarracenia_df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link) %>%
filter(scientificName == species)
View(sarracenia_df)
species
p <- l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., sarracenia_df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link)
View(p)
View(p)
unique(p$scicen)
unique(p$scientificName)
species
species <- "Sarracenia rosea"
p <- l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., sarracenia_df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link) %>%
filter(scientificName == species)
species <- "Sarracenia flava"
p <- l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., sarracenia_df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link) %>%
filter(scientificName == species)
View(sarracenia_df)
p <- l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link) %>%
filter(scientificName == "Sarracenia rosea")
p <- l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link) %>%
filter(scientificName == as.character(species))
p <- l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link) %>%
filter(scientificName == paste(species))
p <- l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link) %>%
filter(scientificName == UQ(species))
species
species <- "Sarracenia rosea"
p <- l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link) %>%
filter(scientificName == UQ(species))
if(!is.na(subspecies)) {p <- p[p$subspecies == subspecies,]}
pal <- colorFactor(
palette = c('darkgreen', 'orange', 'grey30'),
domain = substring(p$source, 1, 1)
)
(m <- leaflet(p, width = '100%') %>%
addMapPane(name = "polygons", zIndex = 410) %>%
addMapPane(name = "maplabels", zIndex = 420) %>%
addProviderTiles("CartoDB.PositronNoLabels") %>%
addProviderTiles("CartoDB.PositronOnlyLabels",
options = leafletOptions(pane = "maplabels"),
group = "map labels") %>%
addPolygons(
#data = p,
#group = "label1",
label = ~label,
fillOpacity = 0.5,
color = ~pal(substring(source, 1, 1)),
stroke = TRUE,
weight = 1,
opacity = .5,
highlightOptions = highlightOptions(
color = "#ff4a4a",
weight = 5,
bringToFront = TRUE
)) %>%
addScaleBar(position = "bottomleft") %>%
htmlwidgets::onRender(jsCode, data=p))
sarracenia_df <- my_plants %>%
bind_rows(., to_acquire) %>%
bind_rows(., sarracenia) %>%
mutate(species = gsub("leucopyhlla", "leucophylla", species)) %>%
filter(species != "x moorei") %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
select(genus, species, subspecies, country, state, county, source, everything()) %>%
distinct(genus, species, subspecies, country, state, county, .keep_all = TRUE) %>%
mutate(scientificName = paste(genus, species)) %>%
filter(!is.na(county)) %>%
mutate(link = paste("https://marco-barandun.github.io/cp-resource/sarracenia/profiles/Sarracenia", species, subspecies, country, state, county, sep = "_") %>%
gsub("-NA", "", .) %>%
gsub(" ", "-", .))
df <- sarracenia_df
p <- l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link) %>%
filter(scientificName == UQ(species))
if(!is.na(subspecies)) {p <- p[p$subspecies == subspecies,]}
pal <- colorFactor(
palette = c('darkgreen', 'orange', 'grey30'),
domain = substring(p$source, 1, 1)
)
(m <- leaflet(p, width = '100%') %>%
addMapPane(name = "polygons", zIndex = 410) %>%
addMapPane(name = "maplabels", zIndex = 420) %>%
addProviderTiles("CartoDB.PositronNoLabels") %>%
addProviderTiles("CartoDB.PositronOnlyLabels",
options = leafletOptions(pane = "maplabels"),
group = "map labels") %>%
addPolygons(
#data = p,
#group = "label1",
label = ~label,
fillOpacity = 0.5,
color = ~pal(substring(source, 1, 1)),
stroke = TRUE,
weight = 1,
opacity = .5,
highlightOptions = highlightOptions(
color = "#ff4a4a",
weight = 5,
bringToFront = TRUE
)) %>%
addScaleBar(position = "bottomleft") %>%
htmlwidgets::onRender(jsCode, data=p))
# Merging the datasets
sarracenia_df <- my_plants %>%
bind_rows(., to_acquire) %>%
bind_rows(., sarracenia) %>%
mutate(species = gsub("leucopyhlla", "leucophylla", species)) %>%
filter(species != "x moorei") %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
select(genus, species, subspecies, country, state, county, source, everything()) %>%
distinct(genus, species, subspecies, country, state, county, .keep_all = TRUE) %>%
mutate(scientificName = paste(genus, species)) %>%
filter(!is.na(county)) %>%
mutate(link = paste("https://marco-barandun.github.io/cp-resource/sarracenia/profiles/Sarracenia", species, subspecies, country, state, county, sep = "_") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .))
p <- l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link) %>%
filter(scientificName == UQ(species))
if(!is.na(subspecies)) {p <- p[p$subspecies == subspecies,]}
pal <- colorFactor(
palette = c('darkgreen', 'orange', 'grey30'),
domain = substring(p$source, 1, 1)
)
(m <- leaflet(p, width = '100%') %>%
addMapPane(name = "polygons", zIndex = 410) %>%
addMapPane(name = "maplabels", zIndex = 420) %>%
addProviderTiles("CartoDB.PositronNoLabels") %>%
addProviderTiles("CartoDB.PositronOnlyLabels",
options = leafletOptions(pane = "maplabels"),
group = "map labels") %>%
addPolygons(
#data = p,
#group = "label1",
label = ~label,
fillOpacity = 0.5,
color = ~pal(substring(source, 1, 1)),
stroke = TRUE,
weight = 1,
opacity = .5,
highlightOptions = highlightOptions(
color = "#ff4a4a",
weight = 5,
bringToFront = TRUE
)) %>%
addScaleBar(position = "bottomleft") %>%
htmlwidgets::onRender(jsCode, data=p))
df <- sarracenia_df
p <- l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link) %>%
filter(scientificName == UQ(species))
if(!is.na(subspecies)) {p <- p[p$subspecies == subspecies,]}
pal <- colorFactor(
palette = c('darkgreen', 'orange', 'grey30'),
domain = substring(p$source, 1, 1)
)
(m <- leaflet(p, width = '100%') %>%
addMapPane(name = "polygons", zIndex = 410) %>%
addMapPane(name = "maplabels", zIndex = 420) %>%
addProviderTiles("CartoDB.PositronNoLabels") %>%
addProviderTiles("CartoDB.PositronOnlyLabels",
options = leafletOptions(pane = "maplabels"),
group = "map labels") %>%
addPolygons(
#data = p,
#group = "label1",
label = ~label,
fillOpacity = 0.5,
color = ~pal(substring(source, 1, 1)),
stroke = TRUE,
weight = 1,
opacity = .5,
highlightOptions = highlightOptions(
color = "#ff4a4a",
weight = 5,
bringToFront = TRUE
)) %>%
addScaleBar(position = "bottomleft") %>%
htmlwidgets::onRender(jsCode, data=p))
# Merging the datasets
sarracenia_df <- my_plants %>%
bind_rows(., to_acquire) %>%
bind_rows(., sarracenia) %>%
mutate(species = gsub("leucopyhlla", "leucophylla", species)) %>%
filter(species != "x moorei") %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
select(genus, species, subspecies, country, state, county, source, everything()) %>%
distinct(genus, species, subspecies, country, state, county, .keep_all = TRUE) %>%
mutate(scientificName = paste(genus, species)) %>%
filter(!is.na(county)) %>%
mutate(link = paste("https://marco-barandun.github.io/cp-resource/sarracenia/profiles/Sarracenia", species, subspecies, county, state, country, sep = "_") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .))
df <- sarracenia_df
p <- l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link) %>%
filter(scientificName == UQ(species))
if(!is.na(subspecies)) {p <- p[p$subspecies == subspecies,]}
pal <- colorFactor(
palette = c('darkgreen', 'orange', 'grey30'),
domain = substring(p$source, 1, 1)
)
(m <- leaflet(p, width = '100%') %>%
addMapPane(name = "polygons", zIndex = 410) %>%
addMapPane(name = "maplabels", zIndex = 420) %>%
addProviderTiles("CartoDB.PositronNoLabels") %>%
addProviderTiles("CartoDB.PositronOnlyLabels",
options = leafletOptions(pane = "maplabels"),
group = "map labels") %>%
addPolygons(
#data = p,
#group = "label1",
label = ~label,
fillOpacity = 0.5,
color = ~pal(substring(source, 1, 1)),
stroke = TRUE,
weight = 1,
opacity = .5,
highlightOptions = highlightOptions(
color = "#ff4a4a",
weight = 5,
bringToFront = TRUE
)) %>%
addScaleBar(position = "bottomleft") %>%
htmlwidgets::onRender(jsCode, data=p))
df <- sarracenia_df
# Merging the datasets
sarracenia_df <- my_plants %>%
bind_rows(., to_acquire) %>%
bind_rows(., sarracenia) %>%
mutate(species = gsub("leucopyhlla", "leucophylla", species)) %>%
filter(species != "x moorei") %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
select(genus, species, subspecies, country, state, county, source, everything()) %>%
distinct(genus, species, subspecies, country, state, county, .keep_all = TRUE) %>%
mutate(scientificName = paste(genus, species)) %>%
filter(!is.na(county)) %>%
mutate(link = paste("https://marco-barandun.github.io/cp-resource/sarracenia/profiles/Sarracenia", species, subspecies, country, state, county, sep = "_") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .))
p <- l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link) %>%
filter(scientificName == UQ(species))
if(!is.na(subspecies)) {p <- p[p$subspecies == subspecies,]}
pal <- colorFactor(
palette = c('darkgreen', 'orange', 'grey30'),
domain = substring(p$source, 1, 1)
)
(m <- leaflet(p, width = '100%') %>%
addMapPane(name = "polygons", zIndex = 410) %>%
addMapPane(name = "maplabels", zIndex = 420) %>%
addProviderTiles("CartoDB.PositronNoLabels") %>%
addProviderTiles("CartoDB.PositronOnlyLabels",
options = leafletOptions(pane = "maplabels"),
group = "map labels") %>%
addPolygons(
#data = p,
#group = "label1",
label = ~label,
fillOpacity = 0.5,
color = ~pal(substring(source, 1, 1)),
stroke = TRUE,
weight = 1,
opacity = .5,
highlightOptions = highlightOptions(
color = "#ff4a4a",
weight = 5,
bringToFront = TRUE
)) %>%
addScaleBar(position = "bottomleft") %>%
htmlwidgets::onRender(jsCode, data=p))
# Merging the datasets
sarracenia_df <- my_plants %>%
bind_rows(., to_acquire) %>%
bind_rows(., sarracenia) %>%
mutate(species = gsub("leucopyhlla", "leucophylla", species)) %>%
filter(species != "x moorei") %>%
arrange(genus, species, subspecies, country, state, county, source) %>%
select(genus, species, subspecies, country, state, county, source, everything()) %>%
distinct(genus, species, subspecies, country, state, county, .keep_all = TRUE) %>%
mutate(scientificName = paste(genus, species)) %>%
filter(!is.na(county)) %>%
mutate(link = paste("https://marco-barandun.github.io/cp-resource/sarracenia/profiles/Sarracenia", species, subspecies, country, state, county, sep = "_") %>%
gsub("_NA", "", .) %>%
gsub(" ", "-", .))
df <-sarracenia_df
p <- l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link) %>%
filter(scientificName == UQ(species))
if(!is.na(subspecies)) {p <- p[p$subspecies == subspecies,]}
pal <- colorFactor(
palette = c('darkgreen', 'orange', 'grey30'),
domain = substring(p$source, 1, 1)
)
(m <- leaflet(p, width = '100%') %>%
addMapPane(name = "polygons", zIndex = 410) %>%
addMapPane(name = "maplabels", zIndex = 420) %>%
addProviderTiles("CartoDB.PositronNoLabels") %>%
addProviderTiles("CartoDB.PositronOnlyLabels",
options = leafletOptions(pane = "maplabels"),
group = "map labels") %>%
addPolygons(
#data = p,
#group = "label1",
label = ~label,
fillOpacity = 0.5,
color = ~pal(substring(source, 1, 1)),
stroke = TRUE,
weight = 1,
opacity = .5,
highlightOptions = highlightOptions(
color = "#ff4a4a",
weight = 5,
bringToFront = TRUE
)) %>%
addScaleBar(position = "bottomleft") %>%
htmlwidgets::onRender(jsCode, data=p))
map_sarracenia <- function(species_list,
subspecies = NA,
df,
l2_global,
export = FALSE) {
#browser()
for (species in species_list) {
jsCode <- paste0('
function(el, x, data) {
var marker = document.getElementsByClassName("leaflet-interactive");
for(var i=0; i < marker.length; i++){
(function(){
var v = data.win_url[i];
marker[i].addEventListener("click", function() { window.open(v);}, false);
}());
}
}
')
p <- l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link) %>%
filter(scientificName == UQ(species))
if(!is.na(subspecies)) {p <- p[p$subspecies == subspecies,]}
pal <- colorFactor(
palette = c('darkgreen', 'orange', 'grey30'),
domain = substring(p$source, 1, 1)
)
(m <- leaflet(p, width = '100%') %>%
addMapPane(name = "polygons", zIndex = 410) %>%
addMapPane(name = "maplabels", zIndex = 420) %>%
addProviderTiles("CartoDB.PositronNoLabels") %>%
addProviderTiles("CartoDB.PositronOnlyLabels",
options = leafletOptions(pane = "maplabels"),
group = "map labels") %>%
addPolygons(
#data = p,
#group = "label1",
label = ~label,
fillOpacity = 0.5,
color = ~pal(substring(source, 1, 1)),
stroke = TRUE,
weight = 1,
opacity = .5,
highlightOptions = highlightOptions(
color = "#ff4a4a",
weight = 5,
bringToFront = TRUE
)) %>%
addScaleBar(position = "bottomleft") %>%
htmlwidgets::onRender(jsCode, data=p))
print(paste("Mapped:", species, if(!is.na(subspecies)) {subspecies}))
if (export == TRUE) {
if (is.na(subspecies)) {saveWidget(m, file=paste("./maps/", gsub(" ", "_", species), ".html", sep = ""))}
if (!is.na(subspecies)) {saveWidget(m, file=paste("./maps/", gsub(" ", "_", species), "_", subspecies, ".html", sep = ""))}
}
}
return(m)
}
map_sarracenia(species_list = "Sarracenia rubra",
#subspecies = "rubra",
df = sarracenia_df,
l2_global = l2,
export = FALSE)
map_sarracenia <- function(species_list,
subspecies = NA,
df,
l2_global,
export = FALSE) {
#browser()
for (species in species_list) {
jsCode <- paste0('
function(el, x, data) {
var marker = document.getElementsByClassName("leaflet-interactive");
for(var i=0; i < marker.length; i++){
(function(){
var v = data.win_url[i];
marker[i].addEventListener("click", function() { window.open(v);}, false);
}());
}
}
')
p <- l2_global %>%
filter(paste(.$COUNTRY, .$NAME_1, .$NAME_2, sep = "_") %in% unique(paste(df$country, df$state, gsub("* County", "", df$county), sep = "_"))) %>%
merge(., df %>% filter(!is.na(county)), by.x = c("COUNTRY", "NAME_1", "NAME_2"), by.y = c("country", "state", "county"), all.x = TRUE) %>%
mutate(label = paste(.$NAME_2, .$NAME_1, sep = ", ")) %>%
mutate(win_url = link) %>%
filter(scientificName == UQ(species))
if(is.na(subspecies)) {p <- p %>% distinct(COUNTRY, NAME_1, NAME_2)}
if(!is.na(subspecies)) {p <- p[p$subspecies == subspecies,]}
pal <- colorFactor(
palette = c('darkgreen', 'orange', 'grey30'),
domain = substring(p$source, 1, 1)
)
(m <- leaflet(p, width = '100%') %>%
addMapPane(name = "polygons", zIndex = 410) %>%
addMapPane(name = "maplabels", zIndex = 420) %>%
addProviderTiles("CartoDB.PositronNoLabels") %>%
addProviderTiles("CartoDB.PositronOnlyLabels",
options = leafletOptions(pane = "maplabels"),
group = "map labels") %>%
addPolygons(
#data = p,
#group = "label1",
label = ~label,
fillOpacity = 0.5,
color = ~pal(substring(source, 1, 1)),
stroke = TRUE,
weight = 1,
opacity = .5,
highlightOptions = highlightOptions(
color = "#ff4a4a",
weight = 5,
bringToFront = TRUE
)) %>%
addScaleBar(position = "bottomleft") %>%
htmlwidgets::onRender(jsCode, data=p))
print(paste("Mapped:", species, if(!is.na(subspecies)) {subspecies}))
if (export == TRUE) {
if (is.na(subspecies)) {saveWidget(m, file=paste("./maps/", gsub(" ", "_", species), ".html", sep = ""))}
if (!is.na(subspecies)) {saveWidget(m, file=paste("./maps/", gsub(" ", "_", species), "_", subspecies, ".html", sep = ""))}
}
}
return(m)
}
map_sarracenia(species_list = "Sarracenia rubra",
#subspecies = "rubra",
df = sarracenia_df,
l2_global = l2,
export = FALSE)
